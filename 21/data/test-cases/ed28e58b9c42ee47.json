{"uid":"ed28e58b9c42ee47","name":"test_get_single_user_schemas","fullName":"api_testing.tests.test_http_handler.Tests#test_get_single_user_schemas","historyId":"81f57795c820e67e4df893f39d24a37a","time":{"start":1687050124320,"stop":1687050124435,"duration":115},"status":"broken","statusMessage":"Exception: Invalid JSON response","statusTrace":"self = <api_testing.tests.test_http_handler.Tests object at 0x7f2cbf7febf0>\n\n    def test_get_single_user_schemas(self):\n>       get_single_user = HTTPHandler.get(SINGLE_USER, 'single_user.json')\n\napi_testing/tests/test_http_handler.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/utils/http_handler.py:25: in get\n    cls.validate_response(response, absolute_schemas_path_and_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\nschemas = '/home/runner/work/OpenWeatherPython_06/utils/schemas/single_user.json'\n\n    @staticmethod\n    def validate_response(response, schemas):\n        try:\n            response_json = response.json()\n            is_valid = validator(response_json, schemas)\n            if not is_valid:\n>               raise Exception(\"Invalid JSON response\")\nE               Exception: Invalid JSON response\n\napi_testing/utils/http_handler.py:15: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"Exception: Invalid JSON response","statusTrace":"self = <api_testing.tests.test_http_handler.Tests object at 0x7f2cbf7febf0>\n\n    def test_get_single_user_schemas(self):\n>       get_single_user = HTTPHandler.get(SINGLE_USER, 'single_user.json')\n\napi_testing/tests/test_http_handler.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/utils/http_handler.py:25: in get\n    cls.validate_response(response, absolute_schemas_path_and_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\nschemas = '/home/runner/work/OpenWeatherPython_06/utils/schemas/single_user.json'\n\n    @staticmethod\n    def validate_response(response, schemas):\n        try:\n            response_json = response.json()\n            is_valid = validator(response_json, schemas)\n            if not is_valid:\n>               raise Exception(\"Invalid JSON response\")\nE               Exception: Invalid JSON response\n\napi_testing/utils/http_handler.py:15: Exception","steps":[],"attachments":[{"uid":"bd8c6f37aa30975d","name":"stdout","source":"bd8c6f37aa30975d.txt","type":"text/plain","size":96}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"api_testing.tests"},{"name":"suite","value":"test_http_handler"},{"name":"subSuite","value":"Tests"},{"name":"host","value":"fv-az561-756"},{"name":"thread","value":"2348-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"api_testing.tests.test_http_handler"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ed28e58b9c42ee47.json","parameterValues":[]}