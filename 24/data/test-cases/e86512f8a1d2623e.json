{"uid":"e86512f8a1d2623e","name":"test_TC_001_05_02_verify_current_location","fullName":"tests.test_main_page_ow6.TestMainPage#test_TC_001_05_02_verify_current_location","historyId":"9fe49845b0df5d199e26fe4ca9804024","time":{"start":1687309474144,"stop":1687309474241,"duration":97},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-container.mobile-padding div h2\"}\n  (Session info: headless chrome=114.0.5735.106)\nStacktrace:\n#0 0x5630c48064e3 <unknown>\n#1 0x5630c4535c76 <unknown>\n#2 0x5630c4571c96 <unknown>\n#3 0x5630c4571dc1 <unknown>\n#4 0x5630c45ab7f4 <unknown>\n#5 0x5630c459103d <unknown>\n#6 0x5630c45a930e <unknown>\n#7 0x5630c4590de3 <unknown>\n#8 0x5630c45662dd <unknown>\n#9 0x5630c456734e <unknown>\n#10 0x5630c47c63e4 <unknown>\n#11 0x5630c47ca3d7 <unknown>\n#12 0x5630c47d4b20 <unknown>\n#13 0x5630c47cb023 <unknown>\n#14 0x5630c47991aa <unknown>\n#15 0x5630c47ef6b8 <unknown>\n#16 0x5630c47ef847 <unknown>\n#17 0x5630c47ff243 <unknown>\n#18 0x7fe999246b43 <unknown>","statusTrace":"self = <test_main_page_ow6.TestMainPage object at 0x7f1a320d5000>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc94e8aadf649df178263c9471f86ba4\")>\nopen_and_load_main_page = None\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"bc94e8aadf649df178263c9471f86ba4\")>\n\n    def test_TC_001_05_02_verify_current_location(self, driver, open_and_load_main_page, wait):\n        page = MainPage(driver)\n>       page.verify_current_location(wait)\n\ntests/test_main_page_ow6.py:112: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:271: in verify_current_location\n    current_city_name = self.driver.find_element(*self.locators.CITY_NAME)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1a30da2770>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5630c47ef847 \\\\u003Cunknown>\\\\n#17 0x5630c47ff243 \\\\u003Cunknown>\\\\n#18 0x7fe999246b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-container.mobile-padding div h2\"}\nE         (Session info: headless chrome=114.0.5735.106)\nE       Stacktrace:\nE       #0 0x5630c48064e3 <unknown>\nE       #1 0x5630c4535c76 <unknown>\nE       #2 0x5630c4571c96 <unknown>\nE       #3 0x5630c4571dc1 <unknown>\nE       #4 0x5630c45ab7f4 <unknown>\nE       #5 0x5630c459103d <unknown>\nE       #6 0x5630c45a930e <unknown>\nE       #7 0x5630c4590de3 <unknown>\nE       #8 0x5630c45662dd <unknown>\nE       #9 0x5630c456734e <unknown>\nE       #10 0x5630c47c63e4 <unknown>\nE       #11 0x5630c47ca3d7 <unknown>\nE       #12 0x5630c47d4b20 <unknown>\nE       #13 0x5630c47cb023 <unknown>\nE       #14 0x5630c47991aa <unknown>\nE       #15 0x5630c47ef6b8 <unknown>\nE       #16 0x5630c47ef847 <unknown>\nE       #17 0x5630c47ff243 <unknown>\nE       #18 0x7fe999246b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1687309465077,"stop":1687309465878,"duration":801},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"wait","time":{"start":1687309465878,"stop":1687309465879,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_and_load_main_page","time":{"start":1687309465879,"stop":1687309474143,"duration":8264},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-container.mobile-padding div h2\"}\n  (Session info: headless chrome=114.0.5735.106)\nStacktrace:\n#0 0x5630c48064e3 <unknown>\n#1 0x5630c4535c76 <unknown>\n#2 0x5630c4571c96 <unknown>\n#3 0x5630c4571dc1 <unknown>\n#4 0x5630c45ab7f4 <unknown>\n#5 0x5630c459103d <unknown>\n#6 0x5630c45a930e <unknown>\n#7 0x5630c4590de3 <unknown>\n#8 0x5630c45662dd <unknown>\n#9 0x5630c456734e <unknown>\n#10 0x5630c47c63e4 <unknown>\n#11 0x5630c47ca3d7 <unknown>\n#12 0x5630c47d4b20 <unknown>\n#13 0x5630c47cb023 <unknown>\n#14 0x5630c47991aa <unknown>\n#15 0x5630c47ef6b8 <unknown>\n#16 0x5630c47ef847 <unknown>\n#17 0x5630c47ff243 <unknown>\n#18 0x7fe999246b43 <unknown>","statusTrace":"self = <test_main_page_ow6.TestMainPage object at 0x7f1a320d5000>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc94e8aadf649df178263c9471f86ba4\")>\nopen_and_load_main_page = None\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"bc94e8aadf649df178263c9471f86ba4\")>\n\n    def test_TC_001_05_02_verify_current_location(self, driver, open_and_load_main_page, wait):\n        page = MainPage(driver)\n>       page.verify_current_location(wait)\n\ntests/test_main_page_ow6.py:112: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:271: in verify_current_location\n    current_city_name = self.driver.find_element(*self.locators.CITY_NAME)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1a30da2770>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5630c47ef847 \\\\u003Cunknown>\\\\n#17 0x5630c47ff243 \\\\u003Cunknown>\\\\n#18 0x7fe999246b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-container.mobile-padding div h2\"}\nE         (Session info: headless chrome=114.0.5735.106)\nE       Stacktrace:\nE       #0 0x5630c48064e3 <unknown>\nE       #1 0x5630c4535c76 <unknown>\nE       #2 0x5630c4571c96 <unknown>\nE       #3 0x5630c4571dc1 <unknown>\nE       #4 0x5630c45ab7f4 <unknown>\nE       #5 0x5630c459103d <unknown>\nE       #6 0x5630c45a930e <unknown>\nE       #7 0x5630c4590de3 <unknown>\nE       #8 0x5630c45662dd <unknown>\nE       #9 0x5630c456734e <unknown>\nE       #10 0x5630c47c63e4 <unknown>\nE       #11 0x5630c47ca3d7 <unknown>\nE       #12 0x5630c47d4b20 <unknown>\nE       #13 0x5630c47cb023 <unknown>\nE       #14 0x5630c47991aa <unknown>\nE       #15 0x5630c47ef6b8 <unknown>\nE       #16 0x5630c47ef847 <unknown>\nE       #17 0x5630c47ff243 <unknown>\nE       #18 0x7fe999246b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"95ae4df2eb9a3bc1","name":"Screenshot","source":"95ae4df2eb9a3bc1.png","type":"image/png","size":408892},{"uid":"b10e840ba0705fab","name":"HTML source","source":"b10e840ba0705fab.html","type":"text/html","size":178774},{"uid":"2a258b3f46a71633","name":"stdout","source":"2a258b3f46a71633.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1687309474676,"stop":1687309474735,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"wait::0","time":{"start":1687309474676,"stop":1687309474676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page_ow6"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az360-66"},{"name":"thread","value":"2427-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page_ow6"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":10,"unknown":0,"total":12},"items":[{"uid":"3e6a1c795e8ec51d","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/23//#testresult/3e6a1c795e8ec51d","status":"passed","time":{"start":1687222891353,"stop":1687222891952,"duration":599}},{"uid":"2b9abd75db2c8fb3","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/22//#testresult/2b9abd75db2c8fb3","status":"passed","time":{"start":1687136620471,"stop":1687136621123,"duration":652}},{"uid":"222a330a69163b4e","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/21//#testresult/222a330a69163b4e","status":"passed","time":{"start":1687050609159,"stop":1687050610363,"duration":1204}},{"uid":"ff79a13fa21a2532","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/20//#testresult/ff79a13fa21a2532","status":"passed","time":{"start":1686963583573,"stop":1686963584170,"duration":597}},{"uid":"a9af3a3f723f4fe3","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/19//#testresult/a9af3a3f723f4fe3","status":"passed","time":{"start":1686877417269,"stop":1686877417926,"duration":657}},{"uid":"809244dd53862250","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/18//#testresult/809244dd53862250","status":"passed","time":{"start":1686790910952,"stop":1686790912069,"duration":1117}},{"uid":"499a7e667db7b659","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/17//#testresult/499a7e667db7b659","status":"passed","time":{"start":1686704567013,"stop":1686704567677,"duration":664}},{"uid":"c379ebb4ac7c5abd","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/14//#testresult/c379ebb4ac7c5abd","status":"passed","time":{"start":1686445715850,"stop":1686445716977,"duration":1127}},{"uid":"3906ba665afea54d","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/13//#testresult/3906ba665afea54d","status":"passed","time":{"start":1686358766881,"stop":1686358767547,"duration":666}},{"uid":"7ff64edc795a030d","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/12//#testresult/7ff64edc795a030d","status":"passed","time":{"start":1686272741961,"stop":1686272742632,"duration":671}},{"uid":"d40a9a40fa9d3ffc","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/11//#testresult/d40a9a40fa9d3ffc","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-container.mobile-padding div h2\"}\n  (Session info: headless chrome=113.0.5672.126)\nStacktrace:\n#0 0x55ed75a62133 <unknown>\n#1 0x55ed75796966 <unknown>\n#2 0x55ed757d30dc <unknown>\n#3 0x55ed757d3211 <unknown>\n#4 0x55ed7580d6c4 <unknown>\n#5 0x55ed757f2bfd <unknown>\n#6 0x55ed7580b1c7 <unknown>\n#7 0x55ed757f29a3 <unknown>\n#8 0x55ed757c746a <unknown>\n#9 0x55ed757c855e <unknown>\n#10 0x55ed75a21cae <unknown>\n#11 0x55ed75a258fe <unknown>\n#12 0x55ed75a2ef20 <unknown>\n#13 0x55ed75a26923 <unknown>\n#14 0x55ed759f9c0e <unknown>\n#15 0x55ed75a49b08 <unknown>\n#16 0x55ed75a49c97 <unknown>\n#17 0x55ed75a5a113 <unknown>\n#18 0x7f039239db43 <unknown>","time":{"start":1686186206450,"stop":1686186206526,"duration":76}}]},"tags":[]},"source":"e86512f8a1d2623e.json","parameterValues":[]}