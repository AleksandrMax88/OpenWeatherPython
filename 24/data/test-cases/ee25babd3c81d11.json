{"uid":"ee25babd3c81d11","name":"test_TC_001_02_02_verify_temperature_switched_on_imperial_system","fullName":"tests.test_main_page_ow6.TestMainPage#test_TC_001_02_02_verify_temperature_switched_on_imperial_system","historyId":"3e8bf7534c4cd9caf122402f60593f95","time":{"start":1687309438119,"stop":1687309438201,"duration":82},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-temp span.heading\"}\n  (Session info: headless chrome=114.0.5735.106)\nStacktrace:\n#0 0x5581101a14e3 <unknown>\n#1 0x55810fed0c76 <unknown>\n#2 0x55810ff0cc96 <unknown>\n#3 0x55810ff0cdc1 <unknown>\n#4 0x55810ff467f4 <unknown>\n#5 0x55810ff2c03d <unknown>\n#6 0x55810ff4430e <unknown>\n#7 0x55810ff2bde3 <unknown>\n#8 0x55810ff012dd <unknown>\n#9 0x55810ff0234e <unknown>\n#10 0x5581101613e4 <unknown>\n#11 0x5581101653d7 <unknown>\n#12 0x55811016fb20 <unknown>\n#13 0x558110166023 <unknown>\n#14 0x5581101341aa <unknown>\n#15 0x55811018a6b8 <unknown>\n#16 0x55811018a847 <unknown>\n#17 0x55811019a243 <unknown>\n#18 0x7efcc1dc1b43 <unknown>","statusTrace":"self = <test_main_page_ow6.TestMainPage object at 0x7f1a320d49a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5c3ea06815adadb0c1c03abf779ece5\")>\nopen_and_load_main_page = None\n\n    def test_TC_001_02_02_verify_temperature_switched_on_imperial_system(self, driver, open_and_load_main_page):\n        page = MainPage(driver)\n>       page.checking_the_temperature_system_switching(\"Â°F\")\n\ntests/test_main_page_ow6.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:231: in checking_the_temperature_system_switching\n    current_temp = self.driver.find_element(*self.locators.CURRENT_TEMP)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1a30dde8c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55811018a847 \\\\u003Cunknown>\\\\n#17 0x55811019a243 \\\\u003Cunknown>\\\\n#18 0x7efcc1dc1b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-temp span.heading\"}\nE         (Session info: headless chrome=114.0.5735.106)\nE       Stacktrace:\nE       #0 0x5581101a14e3 <unknown>\nE       #1 0x55810fed0c76 <unknown>\nE       #2 0x55810ff0cc96 <unknown>\nE       #3 0x55810ff0cdc1 <unknown>\nE       #4 0x55810ff467f4 <unknown>\nE       #5 0x55810ff2c03d <unknown>\nE       #6 0x55810ff4430e <unknown>\nE       #7 0x55810ff2bde3 <unknown>\nE       #8 0x55810ff012dd <unknown>\nE       #9 0x55810ff0234e <unknown>\nE       #10 0x5581101613e4 <unknown>\nE       #11 0x5581101653d7 <unknown>\nE       #12 0x55811016fb20 <unknown>\nE       #13 0x558110166023 <unknown>\nE       #14 0x5581101341aa <unknown>\nE       #15 0x55811018a6b8 <unknown>\nE       #16 0x55811018a847 <unknown>\nE       #17 0x55811019a243 <unknown>\nE       #18 0x7efcc1dc1b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1687309429754,"stop":1687309430555,"duration":801},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_and_load_main_page","time":{"start":1687309430555,"stop":1687309438118,"duration":7563},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"wait","time":{"start":1687309430555,"stop":1687309430555,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-temp span.heading\"}\n  (Session info: headless chrome=114.0.5735.106)\nStacktrace:\n#0 0x5581101a14e3 <unknown>\n#1 0x55810fed0c76 <unknown>\n#2 0x55810ff0cc96 <unknown>\n#3 0x55810ff0cdc1 <unknown>\n#4 0x55810ff467f4 <unknown>\n#5 0x55810ff2c03d <unknown>\n#6 0x55810ff4430e <unknown>\n#7 0x55810ff2bde3 <unknown>\n#8 0x55810ff012dd <unknown>\n#9 0x55810ff0234e <unknown>\n#10 0x5581101613e4 <unknown>\n#11 0x5581101653d7 <unknown>\n#12 0x55811016fb20 <unknown>\n#13 0x558110166023 <unknown>\n#14 0x5581101341aa <unknown>\n#15 0x55811018a6b8 <unknown>\n#16 0x55811018a847 <unknown>\n#17 0x55811019a243 <unknown>\n#18 0x7efcc1dc1b43 <unknown>","statusTrace":"self = <test_main_page_ow6.TestMainPage object at 0x7f1a320d49a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5c3ea06815adadb0c1c03abf779ece5\")>\nopen_and_load_main_page = None\n\n    def test_TC_001_02_02_verify_temperature_switched_on_imperial_system(self, driver, open_and_load_main_page):\n        page = MainPage(driver)\n>       page.checking_the_temperature_system_switching(\"Â°F\")\n\ntests/test_main_page_ow6.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:231: in checking_the_temperature_system_switching\n    current_temp = self.driver.find_element(*self.locators.CURRENT_TEMP)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1a30dde8c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55811018a847 \\\\u003Cunknown>\\\\n#17 0x55811019a243 \\\\u003Cunknown>\\\\n#18 0x7efcc1dc1b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-temp span.heading\"}\nE         (Session info: headless chrome=114.0.5735.106)\nE       Stacktrace:\nE       #0 0x5581101a14e3 <unknown>\nE       #1 0x55810fed0c76 <unknown>\nE       #2 0x55810ff0cc96 <unknown>\nE       #3 0x55810ff0cdc1 <unknown>\nE       #4 0x55810ff467f4 <unknown>\nE       #5 0x55810ff2c03d <unknown>\nE       #6 0x55810ff4430e <unknown>\nE       #7 0x55810ff2bde3 <unknown>\nE       #8 0x55810ff012dd <unknown>\nE       #9 0x55810ff0234e <unknown>\nE       #10 0x5581101613e4 <unknown>\nE       #11 0x5581101653d7 <unknown>\nE       #12 0x55811016fb20 <unknown>\nE       #13 0x558110166023 <unknown>\nE       #14 0x5581101341aa <unknown>\nE       #15 0x55811018a6b8 <unknown>\nE       #16 0x55811018a847 <unknown>\nE       #17 0x55811019a243 <unknown>\nE       #18 0x7efcc1dc1b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"b1c94a3c3f61bcc1","name":"Screenshot","source":"b1c94a3c3f61bcc1.png","type":"image/png","size":408754},{"uid":"bfdeb2e9721c66b5","name":"HTML source","source":"bfdeb2e9721c66b5.html","type":"text/html","size":178907},{"uid":"b944b875bd34a92c","name":"stdout","source":"b944b875bd34a92c.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"wait::0","time":{"start":1687309438673,"stop":1687309438673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1687309438674,"stop":1687309438733,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page_ow6"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az360-66"},{"name":"thread","value":"2427-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page_ow6"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":10,"unknown":0,"total":12},"items":[{"uid":"724eee563c9f99c8","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/23//#testresult/724eee563c9f99c8","status":"passed","time":{"start":1687222857540,"stop":1687222857625,"duration":85}},{"uid":"3cc64c705781ba65","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/22//#testresult/3cc64c705781ba65","status":"passed","time":{"start":1687136585310,"stop":1687136585395,"duration":85}},{"uid":"f2ef674dc3b5fff4","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/21//#testresult/f2ef674dc3b5fff4","status":"passed","time":{"start":1687050573941,"stop":1687050574052,"duration":111}},{"uid":"7b12e9a5749d6c11","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/20//#testresult/7b12e9a5749d6c11","status":"passed","time":{"start":1686963548732,"stop":1686963548817,"duration":85}},{"uid":"c768a70b053b5a9","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/19//#testresult/c768a70b053b5a9","status":"passed","time":{"start":1686877382699,"stop":1686877382787,"duration":88}},{"uid":"a560b17fabfd43be","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/18//#testresult/a560b17fabfd43be","status":"passed","time":{"start":1686790877453,"stop":1686790877543,"duration":90}},{"uid":"94458cb95f9107d5","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/17//#testresult/94458cb95f9107d5","status":"passed","time":{"start":1686704533047,"stop":1686704533131,"duration":84}},{"uid":"ffacfb0b3eb7f724","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/14//#testresult/ffacfb0b3eb7f724","status":"passed","time":{"start":1686445676051,"stop":1686445676150,"duration":99}},{"uid":"86b1dbb2b2a13de8","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/13//#testresult/86b1dbb2b2a13de8","status":"passed","time":{"start":1686358733418,"stop":1686358733509,"duration":91}},{"uid":"db904f7596266501","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/12//#testresult/db904f7596266501","status":"passed","time":{"start":1686272707356,"stop":1686272707481,"duration":125}},{"uid":"6a8031dd3e517eb0","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/11//#testresult/6a8031dd3e517eb0","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.current-temp span.heading\"}\n  (Session info: headless chrome=113.0.5672.126)\nStacktrace:\n#0 0x559ed66b0133 <unknown>\n#1 0x559ed63e4966 <unknown>\n#2 0x559ed64210dc <unknown>\n#3 0x559ed6421211 <unknown>\n#4 0x559ed645b6c4 <unknown>\n#5 0x559ed6440bfd <unknown>\n#6 0x559ed64591c7 <unknown>\n#7 0x559ed64409a3 <unknown>\n#8 0x559ed641546a <unknown>\n#9 0x559ed641655e <unknown>\n#10 0x559ed666fcae <unknown>\n#11 0x559ed66738fe <unknown>\n#12 0x559ed667cf20 <unknown>\n#13 0x559ed6674923 <unknown>\n#14 0x559ed6647c0e <unknown>\n#15 0x559ed6697b08 <unknown>\n#16 0x559ed6697c97 <unknown>\n#17 0x559ed66a8113 <unknown>\n#18 0x7fc8d125eb43 <unknown>","time":{"start":1686186172546,"stop":1686186172615,"duration":69}}]},"tags":[]},"source":"ee25babd3c81d11.json","parameterValues":[]}