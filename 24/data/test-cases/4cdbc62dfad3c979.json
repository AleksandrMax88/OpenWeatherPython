{"uid":"4cdbc62dfad3c979","name":"test_TC_001_05_04_verify_description_weather_for_current_location","fullName":"tests.test_main_page_ow6.TestMainPage#test_TC_001_05_04_verify_description_weather_for_current_location","historyId":"863c620e702252ae84bfe88cf34d8f76","time":{"start":1687309586554,"stop":1687309586570,"duration":16},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#weather-widget div.current-container.mobile-padding div.bold\"}\n  (Session info: headless chrome=114.0.5735.106)\nStacktrace:\n#0 0x5571619224e3 <unknown>\n#1 0x557161651c76 <unknown>\n#2 0x55716168dc96 <unknown>\n#3 0x55716168ddc1 <unknown>\n#4 0x5571616c77f4 <unknown>\n#5 0x5571616ad03d <unknown>\n#6 0x5571616c530e <unknown>\n#7 0x5571616acde3 <unknown>\n#8 0x5571616822dd <unknown>\n#9 0x55716168334e <unknown>\n#10 0x5571618e23e4 <unknown>\n#11 0x5571618e63d7 <unknown>\n#12 0x5571618f0b20 <unknown>\n#13 0x5571618e7023 <unknown>\n#14 0x5571618b51aa <unknown>\n#15 0x55716190b6b8 <unknown>\n#16 0x55716190b847 <unknown>\n#17 0x55716191b243 <unknown>\n#18 0x7f59efd35b43 <unknown>","statusTrace":"self = <test_main_page_ow6.TestMainPage object at 0x7f1a320daf80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7eb0384e2d1614321f8a7b4b36b85b9b\")>\nopen_and_load_main_page = None\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"7eb0384e2d1614321f8a7b4b36b85b9b\")>\n\n    def test_TC_001_05_04_verify_description_weather_for_current_location(self, driver, open_and_load_main_page, wait):\n        actual_weather = MainPage(driver)\n>       actual_weather.check_description_weather_block('Feels like')\n\ntests/test_main_page_ow6.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:511: in check_description_weather_block\n    description_weather = self.driver.find_element(*self.locators.ACTUAL_WEATHER)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1a30bc30a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55716190b847 \\\\u003Cunknown>\\\\n#17 0x55716191b243 \\\\u003Cunknown>\\\\n#18 0x7f59efd35b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#weather-widget div.current-container.mobile-padding div.bold\"}\nE         (Session info: headless chrome=114.0.5735.106)\nE       Stacktrace:\nE       #0 0x5571619224e3 <unknown>\nE       #1 0x557161651c76 <unknown>\nE       #2 0x55716168dc96 <unknown>\nE       #3 0x55716168ddc1 <unknown>\nE       #4 0x5571616c77f4 <unknown>\nE       #5 0x5571616ad03d <unknown>\nE       #6 0x5571616c530e <unknown>\nE       #7 0x5571616acde3 <unknown>\nE       #8 0x5571616822dd <unknown>\nE       #9 0x55716168334e <unknown>\nE       #10 0x5571618e23e4 <unknown>\nE       #11 0x5571618e63d7 <unknown>\nE       #12 0x5571618f0b20 <unknown>\nE       #13 0x5571618e7023 <unknown>\nE       #14 0x5571618b51aa <unknown>\nE       #15 0x55716190b6b8 <unknown>\nE       #16 0x55716190b847 <unknown>\nE       #17 0x55716191b243 <unknown>\nE       #18 0x7f59efd35b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1687309578302,"stop":1687309579106,"duration":804},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"wait","time":{"start":1687309579106,"stop":1687309579106,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_and_load_main_page","time":{"start":1687309579106,"stop":1687309586553,"duration":7447},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#weather-widget div.current-container.mobile-padding div.bold\"}\n  (Session info: headless chrome=114.0.5735.106)\nStacktrace:\n#0 0x5571619224e3 <unknown>\n#1 0x557161651c76 <unknown>\n#2 0x55716168dc96 <unknown>\n#3 0x55716168ddc1 <unknown>\n#4 0x5571616c77f4 <unknown>\n#5 0x5571616ad03d <unknown>\n#6 0x5571616c530e <unknown>\n#7 0x5571616acde3 <unknown>\n#8 0x5571616822dd <unknown>\n#9 0x55716168334e <unknown>\n#10 0x5571618e23e4 <unknown>\n#11 0x5571618e63d7 <unknown>\n#12 0x5571618f0b20 <unknown>\n#13 0x5571618e7023 <unknown>\n#14 0x5571618b51aa <unknown>\n#15 0x55716190b6b8 <unknown>\n#16 0x55716190b847 <unknown>\n#17 0x55716191b243 <unknown>\n#18 0x7f59efd35b43 <unknown>","statusTrace":"self = <test_main_page_ow6.TestMainPage object at 0x7f1a320daf80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7eb0384e2d1614321f8a7b4b36b85b9b\")>\nopen_and_load_main_page = None\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"7eb0384e2d1614321f8a7b4b36b85b9b\")>\n\n    def test_TC_001_05_04_verify_description_weather_for_current_location(self, driver, open_and_load_main_page, wait):\n        actual_weather = MainPage(driver)\n>       actual_weather.check_description_weather_block('Feels like')\n\ntests/test_main_page_ow6.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:511: in check_description_weather_block\n    description_weather = self.driver.find_element(*self.locators.ACTUAL_WEATHER)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1a30bc30a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55716190b847 \\\\u003Cunknown>\\\\n#17 0x55716191b243 \\\\u003Cunknown>\\\\n#18 0x7f59efd35b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#weather-widget div.current-container.mobile-padding div.bold\"}\nE         (Session info: headless chrome=114.0.5735.106)\nE       Stacktrace:\nE       #0 0x5571619224e3 <unknown>\nE       #1 0x557161651c76 <unknown>\nE       #2 0x55716168dc96 <unknown>\nE       #3 0x55716168ddc1 <unknown>\nE       #4 0x5571616c77f4 <unknown>\nE       #5 0x5571616ad03d <unknown>\nE       #6 0x5571616c530e <unknown>\nE       #7 0x5571616acde3 <unknown>\nE       #8 0x5571616822dd <unknown>\nE       #9 0x55716168334e <unknown>\nE       #10 0x5571618e23e4 <unknown>\nE       #11 0x5571618e63d7 <unknown>\nE       #12 0x5571618f0b20 <unknown>\nE       #13 0x5571618e7023 <unknown>\nE       #14 0x5571618b51aa <unknown>\nE       #15 0x55716190b6b8 <unknown>\nE       #16 0x55716190b847 <unknown>\nE       #17 0x55716191b243 <unknown>\nE       #18 0x7f59efd35b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"aa64c7caa55e74a8","name":"Screenshot","source":"aa64c7caa55e74a8.png","type":"image/png","size":408756},{"uid":"61c2d8cc7d6d55d8","name":"HTML source","source":"61c2d8cc7d6d55d8.html","type":"text/html","size":178783},{"uid":"4e30cfacd167c988","name":"stdout","source":"4e30cfacd167c988.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"wait::0","time":{"start":1687309587000,"stop":1687309587000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1687309587001,"stop":1687309587065,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page_ow6"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az360-66"},{"name":"thread","value":"2427-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page_ow6"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"918b1008861abcc0","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/23//#testresult/918b1008861abcc0","status":"passed","time":{"start":1687222973889,"stop":1687222973925,"duration":36}},{"uid":"b2ef543e03c81a01","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/22//#testresult/b2ef543e03c81a01","status":"passed","time":{"start":1687136707981,"stop":1687136708016,"duration":35}},{"uid":"cb466d46989f2bd3","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/21//#testresult/cb466d46989f2bd3","status":"passed","time":{"start":1687050708899,"stop":1687050708943,"duration":44}},{"uid":"5b9b24bd9158604e","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/20//#testresult/5b9b24bd9158604e","status":"passed","time":{"start":1686963665750,"stop":1686963665784,"duration":34}}]},"tags":[]},"source":"4cdbc62dfad3c979.json","parameterValues":[]}