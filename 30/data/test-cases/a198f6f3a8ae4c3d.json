{"uid":"a198f6f3a8ae4c3d","name":"test_tc_001_15_10_verify_redirection_to_app_store","fullName":"tests.test_app_store_page_ow6.TestAppStorePage#test_tc_001_15_10_verify_redirection_to_app_store","historyId":"675271eda3e2bb24983f80a445643d12","time":{"start":1687827864073,"stop":1687827959956,"duration":95883},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=114.0.5735.133)\nStacktrace:\n#0 0x55dc02d614e3 <unknown>\n#1 0x55dc02a90c76 <unknown>\n#2 0x55dc02a9553c <unknown>\n#3 0x55dc02a97480 <unknown>\n#4 0x55dc02b04f32 <unknown>\n#5 0x55dc02aec012 <unknown>\n#6 0x55dc02b0430e <unknown>\n#7 0x55dc02aebde3 <unknown>\n#8 0x55dc02ac12dd <unknown>\n#9 0x55dc02ac234e <unknown>\n#10 0x55dc02d213e4 <unknown>\n#11 0x55dc02d253d7 <unknown>\n#12 0x55dc02d2fb20 <unknown>\n#13 0x55dc02d26023 <unknown>\n#14 0x55dc02cf41aa <unknown>\n#15 0x55dc02d4a6b8 <unknown>\n#16 0x55dc02d4a847 <unknown>\n#17 0x55dc02d5a243 <unknown>\n#18 0x7fa24c1bfb43 <unknown>","statusTrace":"self = <test_app_store_page_ow6.TestAppStorePage object at 0x7f26a813cbe0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"00bce5d7a98415ca7b07bfffc84851b3\")>\nopen_and_load_main_page = None\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"00bce5d7a98415ca7b07bfffc84851b3\")>\n\n    def test_tc_001_15_10_verify_redirection_to_app_store(self, driver, open_and_load_main_page, wait):\n        main_page = MainPage(driver)\n        main_page.go_to_about_us_page_from_main_page(driver)\n    \n        about_us_page = AboutUsPage(driver)\n        about_us_page.click_on_app_store_button()\n    \n        app_store_page = AppStorePage(driver)\n>       app_store_page.verify_element_on_page_url()\n\ntests/test_app_store_page_ow6.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/app_store_page.py:10: in verify_element_on_page_url\n    expected_element = self.element_is_visible(self.locators.APP_TITLE)\npages/base_page.py:74: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\npages/base_page.py:131: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:500: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f26a81abfd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55dc02d4a847 \\\\u003Cunknown>\\\\n#17 0x55dc02d5a243 \\\\u003Cunknown>\\\\n#18 0x7fa24c1bfb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=114.0.5735.133)\nE       Stacktrace:\nE       #0 0x55dc02d614e3 <unknown>\nE       #1 0x55dc02a90c76 <unknown>\nE       #2 0x55dc02a9553c <unknown>\nE       #3 0x55dc02a97480 <unknown>\nE       #4 0x55dc02b04f32 <unknown>\nE       #5 0x55dc02aec012 <unknown>\nE       #6 0x55dc02b0430e <unknown>\nE       #7 0x55dc02aebde3 <unknown>\nE       #8 0x55dc02ac12dd <unknown>\nE       #9 0x55dc02ac234e <unknown>\nE       #10 0x55dc02d213e4 <unknown>\nE       #11 0x55dc02d253d7 <unknown>\nE       #12 0x55dc02d2fb20 <unknown>\nE       #13 0x55dc02d26023 <unknown>\nE       #14 0x55dc02cf41aa <unknown>\nE       #15 0x55dc02d4a6b8 <unknown>\nE       #16 0x55dc02d4a847 <unknown>\nE       #17 0x55dc02d5a243 <unknown>\nE       #18 0x7fa24c1bfb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1687827855831,"stop":1687827856586,"duration":755},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"wait","time":{"start":1687827856586,"stop":1687827856586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_and_load_main_page","time":{"start":1687827856587,"stop":1687827864073,"duration":7486},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=114.0.5735.133)\nStacktrace:\n#0 0x55dc02d614e3 <unknown>\n#1 0x55dc02a90c76 <unknown>\n#2 0x55dc02a9553c <unknown>\n#3 0x55dc02a97480 <unknown>\n#4 0x55dc02b04f32 <unknown>\n#5 0x55dc02aec012 <unknown>\n#6 0x55dc02b0430e <unknown>\n#7 0x55dc02aebde3 <unknown>\n#8 0x55dc02ac12dd <unknown>\n#9 0x55dc02ac234e <unknown>\n#10 0x55dc02d213e4 <unknown>\n#11 0x55dc02d253d7 <unknown>\n#12 0x55dc02d2fb20 <unknown>\n#13 0x55dc02d26023 <unknown>\n#14 0x55dc02cf41aa <unknown>\n#15 0x55dc02d4a6b8 <unknown>\n#16 0x55dc02d4a847 <unknown>\n#17 0x55dc02d5a243 <unknown>\n#18 0x7fa24c1bfb43 <unknown>","statusTrace":"self = <test_app_store_page_ow6.TestAppStorePage object at 0x7f26a813cbe0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"00bce5d7a98415ca7b07bfffc84851b3\")>\nopen_and_load_main_page = None\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"00bce5d7a98415ca7b07bfffc84851b3\")>\n\n    def test_tc_001_15_10_verify_redirection_to_app_store(self, driver, open_and_load_main_page, wait):\n        main_page = MainPage(driver)\n        main_page.go_to_about_us_page_from_main_page(driver)\n    \n        about_us_page = AboutUsPage(driver)\n        about_us_page.click_on_app_store_button()\n    \n        app_store_page = AppStorePage(driver)\n>       app_store_page.verify_element_on_page_url()\n\ntests/test_app_store_page_ow6.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/app_store_page.py:10: in verify_element_on_page_url\n    expected_element = self.element_is_visible(self.locators.APP_TITLE)\npages/base_page.py:74: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\npages/base_page.py:131: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:500: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f26a81abfd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55dc02d4a847 \\\\u003Cunknown>\\\\n#17 0x55dc02d5a243 \\\\u003Cunknown>\\\\n#18 0x7fa24c1bfb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=114.0.5735.133)\nE       Stacktrace:\nE       #0 0x55dc02d614e3 <unknown>\nE       #1 0x55dc02a90c76 <unknown>\nE       #2 0x55dc02a9553c <unknown>\nE       #3 0x55dc02a97480 <unknown>\nE       #4 0x55dc02b04f32 <unknown>\nE       #5 0x55dc02aec012 <unknown>\nE       #6 0x55dc02b0430e <unknown>\nE       #7 0x55dc02aebde3 <unknown>\nE       #8 0x55dc02ac12dd <unknown>\nE       #9 0x55dc02ac234e <unknown>\nE       #10 0x55dc02d213e4 <unknown>\nE       #11 0x55dc02d253d7 <unknown>\nE       #12 0x55dc02d2fb20 <unknown>\nE       #13 0x55dc02d26023 <unknown>\nE       #14 0x55dc02cf41aa <unknown>\nE       #15 0x55dc02d4a6b8 <unknown>\nE       #16 0x55dc02d4a847 <unknown>\nE       #17 0x55dc02d5a243 <unknown>\nE       #18 0x7fa24c1bfb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","steps":[],"attachments":[{"uid":"9630e6718e8cdf5d","name":"Screenshot","source":"9630e6718e8cdf5d.png","type":"image/png","size":111714},{"uid":"aba8dd98e732be17","name":"HTML source","source":"aba8dd98e732be17.html","type":"text/html","size":736654},{"uid":"b510baf378753c47","name":"stdout","source":"b510baf378753c47.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"wait::0","time":{"start":1687827960148,"stop":1687827960148,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1687827960149,"stop":1687827960210,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_app_store_page_ow6"},{"name":"subSuite","value":"TestAppStorePage"},{"name":"host","value":"fv-az447-464"},{"name":"thread","value":"2354-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_app_store_page_ow6"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":20,"unknown":0,"total":21},"items":[{"uid":"9995c4f29721f7fd","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/29//#testresult/9995c4f29721f7fd","status":"passed","time":{"start":1687741714619,"stop":1687741718769,"duration":4150}},{"uid":"e9bfeb5544a99edc","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/28//#testresult/e9bfeb5544a99edc","status":"passed","time":{"start":1687655462160,"stop":1687655465620,"duration":3460}},{"uid":"64246ad3c659306d","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/27//#testresult/64246ad3c659306d","status":"passed","time":{"start":1687568655409,"stop":1687568658926,"duration":3517}},{"uid":"1072a8775274dbe6","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/26//#testresult/1072a8775274dbe6","status":"passed","time":{"start":1687482247187,"stop":1687482251032,"duration":3845}},{"uid":"481dc728a646da26","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/25//#testresult/481dc728a646da26","status":"passed","time":{"start":1687395538177,"stop":1687395541038,"duration":2861}},{"uid":"b5fc68c7c63f4af3","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/24//#testresult/b5fc68c7c63f4af3","status":"passed","time":{"start":1687309115969,"stop":1687309119755,"duration":3786}},{"uid":"db7d6ebbc83e1419","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/23//#testresult/db7d6ebbc83e1419","status":"passed","time":{"start":1687222546058,"stop":1687222567008,"duration":20950}},{"uid":"945393b9b98d396d","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/22//#testresult/945393b9b98d396d","status":"passed","time":{"start":1687136271621,"stop":1687136274677,"duration":3056}},{"uid":"86167ba5e4aff4c0","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/21//#testresult/86167ba5e4aff4c0","status":"passed","time":{"start":1687050235669,"stop":1687050239065,"duration":3396}},{"uid":"73cafbcf524fa51b","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/20//#testresult/73cafbcf524fa51b","status":"passed","time":{"start":1686963253532,"stop":1686963256187,"duration":2655}},{"uid":"497b6103f022725d","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/19//#testresult/497b6103f022725d","status":"passed","time":{"start":1686877068118,"stop":1686877071500,"duration":3382}},{"uid":"972a198175515614","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/18//#testresult/972a198175515614","status":"passed","time":{"start":1686790624551,"stop":1686790628455,"duration":3904}},{"uid":"3e77ab3d3276c8ff","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/17//#testresult/3e77ab3d3276c8ff","status":"passed","time":{"start":1686704269121,"stop":1686704272906,"duration":3785}},{"uid":"edc0c82f88512799","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/14//#testresult/edc0c82f88512799","status":"passed","time":{"start":1686445419870,"stop":1686445423353,"duration":3483}},{"uid":"aaa69fd116cc1341","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/13//#testresult/aaa69fd116cc1341","status":"passed","time":{"start":1686358505830,"stop":1686358508585,"duration":2755}},{"uid":"ba30816ef2d37ca9","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/12//#testresult/ba30816ef2d37ca9","status":"passed","time":{"start":1686272464600,"stop":1686272468193,"duration":3593}},{"uid":"d4d0d1d6b0fb96b3","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/11//#testresult/d4d0d1d6b0fb96b3","status":"passed","time":{"start":1686185948927,"stop":1686185952087,"duration":3160}},{"uid":"aecfb70876ba3a89","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/10//#testresult/aecfb70876ba3a89","status":"passed","time":{"start":1686099644086,"stop":1686099646876,"duration":2790}},{"uid":"5e9d4f85cf87034e","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/8//#testresult/5e9d4f85cf87034e","status":"passed","time":{"start":1685926705156,"stop":1685926708520,"duration":3364}},{"uid":"806e0af2b641846","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/7//#testresult/806e0af2b641846","status":"passed","time":{"start":1685840725501,"stop":1685840728647,"duration":3146}}]},"tags":[]},"source":"a198f6f3a8ae4c3d.json","parameterValues":[]}